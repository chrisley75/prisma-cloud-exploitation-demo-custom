#########
# EC2 configuration

resource "aws_key_pair" "ssh_key" {
  key_name   = "${var.solution_name}-ssh-${random_string.suffix.result}"
  public_key = "${var.public_ssh_key}"
}

resource "aws_instance" "ec2instance" {

  ami           = data.aws_ami.ubuntu.id
  instance_type = "t2.micro"

  subnet_id              = module.vpc.public_subnets[0]
  private_ip             = "10.0.4.10"
  vpc_security_group_ids = ["${aws_security_group.spring4shell_demo.id}"]

  associate_public_ip_address = true

  key_name = "${aws_key_pair.ssh_key.key_name}"

  root_block_device {
    delete_on_termination = true
    volume_size           = 20
    volume_type           = "gp2"
  }

  # https://docs.bridgecrew.io/docs/bc_aws_general_31
  metadata_options {
    http_endpoint = "enabled"
    http_tokens   = "optional"
  }

  user_data_replace_on_change  = true
  # Initialize EC2 instance with tooling & pull automatically images
  user_data = templatefile("templates/ec2.sh", {
    region        = data.aws_region.current.name,
    # defender_curl =  data.external.defender_curl.result.command  # "touch /home/ubuntu/test"
    defender_curl = "${var.deploy_defender ? data.external.defender_curl.result.command : "touch /home/ubuntu/no_defender"}"
    }
  )

  # Attach overprivileged role
  iam_instance_profile = aws_iam_instance_profile.ec2_profile_ecr.name

  depends_on = [
    aws_key_pair.ssh_key
  ]
}
