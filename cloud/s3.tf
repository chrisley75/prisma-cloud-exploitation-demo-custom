#########
# S3 Configuration

# S3 bucket for payload
resource "aws_s3_bucket" "bucket" {
  bucket        = "${var.solution_name}-s3-${random_string.suffix.result}"
  force_destroy = true
}

locals {
  user_creation_script = templatefile("templates/create_iam_user.tpl", {
    user_name = "${var.user_name}"
  })
}

# Script to create iam user / payload
resource "aws_s3_object" "script" {
  bucket = aws_s3_bucket.bucket.id
  key    = "create_iam_user.sh"
  content = local.user_creation_script
  acl    = "public-read"
  etag   = filemd5("templates/create_iam_user.tpl")

  depends_on = [
    aws_s3_bucket_acl.bucket
  ]
}

resource "aws_s3_bucket_ownership_controls" "bucket" {
  bucket = aws_s3_bucket.bucket.id
  rule {
    object_ownership = "BucketOwnerPreferred"
  }
}

resource "aws_s3_bucket_public_access_block" "bucket" {
  bucket = aws_s3_bucket.bucket.id

  block_public_acls       = false
  block_public_policy     = false
  ignore_public_acls      = false
  restrict_public_buckets = false
}

resource "aws_s3_bucket_acl" "bucket" {
  depends_on = [
    aws_s3_bucket_ownership_controls.bucket,
    aws_s3_bucket_public_access_block.bucket,
  ]

  bucket = aws_s3_bucket.bucket.id
  acl    = "public-read"
}
